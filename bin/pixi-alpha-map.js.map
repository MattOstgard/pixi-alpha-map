{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/index","src/AlphaMapShader.js","src/AlphaMapSprite.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pixi-alpha-map.js","sourceRoot":"./","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (global){\n/**\r\n * @namespace PIXI.alphaMap\r\n */\r\n\r\nvar alphaMap = {\r\n\tAlphaMapSprite: require('./AlphaMapSprite.js'),\r\n\tAlphaMapShader: require('./AlphaMapShader.js')\r\n}\r\n\r\nalphaMap.shader = new alphaMap.AlphaMapShader();\r\n\r\nmodule.exports = global.PIXI.alphaMap = alphaMap;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQG5hbWVzcGFjZSBQSVhJLmFscGhhTWFwXHJcbiAqL1xyXG5cclxudmFyIGFscGhhTWFwID0ge1xyXG5cdEFscGhhTWFwU3ByaXRlOiByZXF1aXJlKCcuL0FscGhhTWFwU3ByaXRlLmpzJyksXHJcblx0QWxwaGFNYXBTaGFkZXI6IHJlcXVpcmUoJy4vQWxwaGFNYXBTaGFkZXIuanMnKVxyXG59XHJcblxyXG5hbHBoYU1hcC5zaGFkZXIgPSBuZXcgYWxwaGFNYXAuQWxwaGFNYXBTaGFkZXIoKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLlBJWEkuYWxwaGFNYXAgPSBhbHBoYU1hcDsiXX0=","function AlphaMapShader()\r\n{\r\n    PIXI.AbstractFilter.call(this,\r\n        // Vertex shader\r\n        null,\r\n\r\n        // Fragment shader\r\n        [\r\n            'precision lowp float;',\r\n\r\n            'varying vec2 vTextureCoord;',\r\n            'varying vec4 vColor;',\r\n\r\n            'uniform sampler2D uSampler;',\r\n            'uniform sampler2D alphaTexture;',\r\n\r\n            'void main(void){',\r\n            '   vec3 color = texture2D(uSampler, vTextureCoord).rgb;',\r\n            '   float alpha = texture2D(alphaTexture, vTextureCoord).r;',\r\n            '   gl_FragColor = vec4(color.r, color.g, color.b, alpha) * vColor;',\r\n            '}'\r\n        ].join('\\n'),\r\n\r\n        // Custom uniforms\r\n        {\r\n            alphaTexture: { type: 'sampler2D', value: 0 }\r\n        }\r\n    );\r\n}\r\n\r\nAlphaMapShader.prototype = Object.create(PIXI.AbstractFilter.prototype);\r\nAlphaMapShader.prototype.constructor = AlphaMapShader;\r\nmodule.exports = AlphaMapShader;\r\n\r\nObject.defineProperties(AlphaMapShader.prototype, {\r\n    /**\r\n     * Alpha texture to be used as transparency.\r\n     *\r\n     * @member {PIXI.Texture}\r\n     * @memberof PIXI.alphaMap.AlphaMapShader#\r\n     */\r\n    alphaTexture: {\r\n        get: function ()\r\n        {\r\n            return this.uniforms.alphaTexture.value;\r\n        },\r\n        set: function (value)\r\n        {\r\n            this.uniforms.alphaTexture.value = value;\r\n        }\r\n    }\r\n});","/**\r\n * An AlphaMapSprite allows the use of two separate images for color and transparency.\r\n * In most cases this is useful when you want to are using an image format like jpg that does not support transparency.\r\n *\r\n * ```js\r\n * //TODO\r\n * ```\r\n *\r\n * @class\r\n * @extends PIXI.Sprite\r\n * @memberof PIXI.alphaMap\r\n * @param texture {PIXI.Texture} the RGB (color) texture.\r\n * @param texture {PIXI.Texture} the Alpha (transparency) texture.\r\n */\r\nfunction AlphaMapSprite(texture, alphaTexture)\r\n{\r\n\tPIXI.Sprite.call(this, texture);\r\n\tthis.shader = PIXI.alphaMap.shader;\r\n\tthis.alphaTexture = alphaTexture;\r\n}\r\n\r\n/**\r\n*\r\n* Renders the object using the WebGL renderer\r\n*\r\n* @param renderer {PIXI.WebGLRenderer}\r\n* @private\r\n*/\r\nAlphaMapSprite.prototype._renderWebGL = function (renderer)\r\n{\r\n    renderer.setObjectRenderer(renderer.plugins.sprite);\r\n    this.shader.alphaTexture = this.alphaTexture;\r\n    renderer.plugins.sprite.render(this);\r\n};\r\n\r\n// Constructor\r\nAlphaMapSprite.prototype = Object.create(PIXI.Sprite.prototype);\r\nAlphaMapSprite.prototype.constructor = AlphaMapSprite;\r\nmodule.exports = AlphaMapSprite;"]}